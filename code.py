import streamlit as st
import yfinance as yf
import pandas as pd
import numpy as np

# Set the app title and description
st.title("FinVision by AlfaZeta")
st.markdown("""
**Unveiling the future of market intelligence with AlfaZeta’s latest innovation, FinVision.**
This state-of-the-art AI model is engineered to navigate the complexities of financial markets, offering unparalleled predictive insights.
Whether you’re a seasoned investor or a financial novice, FinVision equips you with foresight to make informed decisions, stay ahead of the curve, and capitalize on emerging opportunities.
With FinVision, AlfaZeta is not just predicting the future; we’re defining it.
""")

# Sidebar for ticker input
st.sidebar.header("Stock Selection")
ticker = st.sidebar.text_input("Enter the stock ticker symbol", "AAPL")

# Function to fetch stock data using yfinance
def load_data(ticker):
    stock_data = yf.download(ticker, period="1y")
    stock_data.reset_index(inplace=True)
    return stock_data

# Simulated FinVision AI Model (for demonstration purposes)
def finvision_predict(data):
    # Simple prediction logic: assume a small random walk for demonstration
    data['Predicted'] = data['Close'].shift(-1) * (1 + np.random.normal(0, 0.02, len(data)))
    return data

# Load and display stock data
data = load_data(ticker)
st.subheader(f"Stock Data for {ticker}")
st.line_chart(data[['Date', 'Close']].set_index('Date'))

# Apply FinVision AI Model for prediction
predicted_data = finvision_predict(data)

# Display predictive insights
st.subheader("Predictive Market Insights")
st.line_chart(predicted_data[['Date', 'Close', 'Predicted']].set_index('Date'))
st.write("Predictions generated by FinVision's state-of-the-art AI model.")

# Option to download the data
st.sidebar.header("Download Data")
st.sidebar.download_button(label="Download data as CSV", data=predicted_data.to_csv(), file_name=f"{ticker}_finvision_predictions.csv", mime='text/csv')
